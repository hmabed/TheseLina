This is LuaTeX, Version 1.07.0 (MiKTeX 2.9.6630 64-bit)  (format=lualatex 2018.6.15)  15 JUN 2018 09:58
 restricted system commands enabled.
**acmart.cls
(./acmart.cls
LaTeX2e <2017-04-15>
Lua module: luaotfload-main 2017/01/29 2.80001 OpenType layout system.
Lua module: lualibs 2017-02-01 2.5 ConTeXt Lua standard libraries.
Lua module: lualibs-extended 2017-02-01 2.5 ConTeXt Lua libraries -- extended co
llection.(using cache: C:/Users/hmabed/AppData/Local/MiKTeX/2.9/luatex-cache/gen
eric)
luaotfload | conf : Root cache directory is C:/Users/hmabed/AppData/Local/MiKTeX
/2.9/luatex-cache/generic/names.
luaotfload | init : Loading fontloader “fontloader-2017-02-11.lua” from kpse
-resolved path “C:/Program Files/MiKTeX 2.9/tex/luatex/luaotfload/fontloader-2
017-02-11.lua”.
Lua-only attribute luaotfload@state = 1
Lua-only attribute luaotfload@noligature = 2
Lua-only attribute luaotfload@syllabe = 3
luaotfload | init : Context OpenType loader version “3.027”
Inserting `luaotfload.node_processor' at position 1 in `pre_linebreak_filter'.
Inserting `luaotfload.node_processor' at position 1 in `hpack_filter'.
Inserting `luaotfload.define_font' at position 1 in `define_font'.
Lua-only attribute luaotfload_color_attribute = 4
luaotfload | conf : Root cache directory is C:/Users/hmabed/AppData/Local/MiKTeX
/2.9/luatex-cache/generic/names.
Inserting `luaotfload.aux.set_sscale_dimens' at position 1 in `luaotfload.patch_
font'.
Inserting `luaotfload.aux.patch_cambria_domh' at position 2 in `luaotfload.patch
_font'.
Inserting `luaotfload.aux.fixup_fontdata' at position 1 in `luaotfload.patch_fon
t_unsafe'.
Inserting `luaotfload.aux.set_capheight' at position 3 in `luaotfload.patch_font
'.
Inserting `luaotfload.rewrite_fontname' at position 4 in `luaotfload.patch_font'
.
luaotfload | main : initialization completed in 1.005 seconds
Babel <3.18> and hyphenation patterns for 1 language(s) loaded.

LaTeX Warning: You have requested package `',
               but the package provides `acmart'.

Package: acmart 2018/02/07 v1.50 Typesetting articles for the Association for Co
mputing Machinery
("C:/Program Files/MiKTeX 2.9/tex/latex/xkeyval/xkeyval.sty"
Package: xkeyval 2014/12/03 v2.7a package option processing (HA)

("C:/Program Files/MiKTeX 2.9/tex/generic/xkeyval/xkeyval.tex"
("C:/Program Files/MiKTeX 2.9/tex/generic/xkeyval/xkvutils.tex"
\XKV@toks=\toks14
\XKV@tempa@toks=\toks15

("C:/Program Files/MiKTeX 2.9/tex/generic/xkeyval/keyval.tex"))
\XKV@depth=\count79
File: xkeyval.tex 2014/12/03 v2.7a key=value parser (HA)
)

! Package xkeyval Error: xkeyval loaded before \documentclass.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.62 ...keyval loaded before \protect\documentclass}
                                                  %
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

) ("C:/Program Files/MiKTeX 2.9/tex/latex/xstring/xstring.sty"
("C:/Program Files/MiKTeX 2.9/tex/generic/xstring/xstring.tex"
\@xs@message=\write3
\integerpart=\count80
\decimalpart=\count81
)
Package: xstring 2013/10/13  v1.7c  String manipulations (C Tellechea)
)
! Undefined control sequence.
<recently read> \define 
        
l.49 \define
          @choicekey*+{acmart.cls}{format}[\ACM@format\ACM@format@nr]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.49 \define@
           choicekey*+{acmart.cls}{format}[\ACM@format\ACM@format@nr]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.49 \define@choicekey*+{acmart.cls}{format}[\ACM
                                               @format\ACM@format@nr]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.49 ...icekey*+{acmart.cls}{format}[\ACM@format\ACM
                                                  @format@nr]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Argument of \ClassError has an extra }.
<inserted text> 
\par 
l.54     sigplan, sigchi or sigchi-a}}
                                    
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \ClassError was complete.
<to be read again> 
\par 
l.54     sigplan, sigchi or sigchi-a}}
                                    
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 49--54
[]@choicekey*+acmart.clsformat[@format@format@nr]manuscript,
 []


! Package xkeyval Error: `format' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.65 \ExecuteOptionsX{format}
                           
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.66 \define
          @boolkey+{acmart.cls}[@ACM@]{screen}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.66 \define@
           boolkey+{acmart.cls}[@ACM@]{screen}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Not using screen mode\on@line .
l.70 ...kageInfo{\@classname}{Not using screen mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Not using screen mode on input line 70.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.72     false}}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.72     false}}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 66--72
[]@boolkey+acmart.cls[@ACM@]screen[true] 
 []


! Package xkeyval Error: `screen' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.73 \ExecuteOptionsX{screen=false}
                                 
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.74 \define
          @boolkey+{acmart.cls}[@ACM@]{acmthm}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.74 \define@
           boolkey+{acmart.cls}[@ACM@]{acmthm}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Suppressing acmthm\on@line .
l.78 ...PackageInfo{\@classname}{Suppressing acmthm}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Suppressing acmthm on input line 78.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.80     false}}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.80     false}}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 74--80
[]@boolkey+acmart.cls[@ACM@]acmthm[true] 
 []


! Package xkeyval Error: `acmthm' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.81 \ExecuteOptionsX{acmthm=true}
                                
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.82 \define
          @boolkey+{acmart.cls}[@ACM@]{review}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.82 \define@
           boolkey+{acmart.cls}[@ACM@]{review}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Not using review mode\on@line .
l.87 ...kageInfo{\@classname}{Not using review mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Not using review mode on input line 87.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.89     false}}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.89     false}}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 82--89
[]@boolkey+acmart.cls[@ACM@]review[true] 
 []


! Package xkeyval Error: `review' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.90 \ExecuteOptionsX{review=false}
                                 
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.91 \define
          @boolkey+{acmart.cls}[@ACM@]{authorversion}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.91 \define@
           boolkey+{acmart.cls}[@ACM@]{authorversion}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Not using authorversion mode\on@line .
l.95 ...o{\@classname}{Not using authorversion mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Not using authorversion mode on input line 95.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.97     false}}
              
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.97     false}}
              
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 91--97
[]@boolkey+acmart.cls[@ACM@]authorversion[true] 
 []


! Package xkeyval Error: `authorversion' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.98 \ExecuteOptionsX{authorversion=false}
                                        
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.99 \define
          @boolkey+{acmart.cls}[@ACM@]{natbib}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.99 \define@
           boolkey+{acmart.cls}[@ACM@]{natbib}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Explicitly deselecting natbib mode\on@line .
l.103 ...ssname}{Explicitly deselecting natbib mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Explicitly deselecting natbib mode on input line 103.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.105     false}}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.105     false}}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 99--105
[]@boolkey+acmart.cls[@ACM@]natbib[true] 
 []


! Package xkeyval Error: `natbib' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.106 \ExecuteOptionsX{natbib=true}
                                 
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.107 \define
           @boolkey+{acmart.cls}[@ACM@]{anonymous}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.107 \define@
            boolkey+{acmart.cls}[@ACM@]{anonymous}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Not using anonymous mode\on@line .
l.111 ...Info{\@classname}{Not using anonymous mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Not using anonymous mode on input line 111.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.113     false}}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.113     false}}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 107--113
[]@boolkey+acmart.cls[@ACM@]anonymous[true] 
 []


! Package xkeyval Error: `anonymous' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.114 \ExecuteOptionsX{anonymous=false}
                                     
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.115 \define
           @boolkey+{acmart.cls}[@ACM@]{timestamp}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.115 \define@
            boolkey+{acmart.cls}[@ACM@]{timestamp}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Not using timestamp mode\on@line .
l.119 ...Info{\@classname}{Not using timestamp mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Not using timestamp mode on input line 119.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.121     false}}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.121     false}}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 115--121
[]@boolkey+acmart.cls[@ACM@]timestamp[true] 
 []


! Package xkeyval Error: `timestamp' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.122 \ExecuteOptionsX{timestamp=false}
                                     
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.123 \define
           @boolkey+{acmart.cls}[@ACM@]{authordraft}[true]{%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.123 \define@
            boolkey+{acmart.cls}[@ACM@]{authordraft}[true]{%
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \@ doesn't match its definition.
<write> Package \@c
           lassname Info: Not using authordraft mode\on@line .
l.129 ...fo{\@classname}{Not using authordraft mode}
                                                  %
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Package lassname Info: Not using authordraft mode on input line 129.
! Argument of \PackageError has an extra }.
<inserted text> 
\par 
l.131     false}}
               
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
! Paragraph ended before \PackageError was complete.
<to be read again> 
\par 
l.131     false}}
               
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (20.0pt too wide) in paragraph at lines 123--131
[]@boolkey+acmart.cls[@ACM@]authordraft[true] 
 []


! Package xkeyval Error: `authordraft' undefined in families `.'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.132 \ExecuteOptionsX{authordraft=false}
                                       
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing \endcsname inserted.
<to be read again> 
\opt@. 
l.141 \ClassInfo
              {\@classname}{Using format \ACM@format, number \ACM@format@nr}
The control sequence marked <to be read again> should
not appear between \csname and \endcsname.


! LaTeX Error: Unknown option `\opt@. ' for package `'.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.141 \ClassInfo
              {\@classname}{Using format \ACM@format, number \ACM@format@nr}
The option `\opt@. ' was not declared in package `', perhaps you
misspelled its name. Try typing  <return>  to proceed.

! Use of \@ doesn't match its definition.
<write> Class \@c
         lassname Info: Using format \ACM @format, number \ACM @format@nr\on@li
l.141 ... format \ACM@format, number \ACM@format@nr}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \ACM doesn't match its definition.
<write> Class \@classname Info: Using format \ACM @for
                                              mat, number \ACM @format@nr\on@li
l.141 ... format \ACM@format, number \ACM@format@nr}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \ACM doesn't match its definition.
<write> ...fo: Using format \ACM @format, number \ACM @for
                                                  mat@nr\on@line .
l.141 ... format \ACM@format, number \ACM@format@nr}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Class lassname Info: Using format mat, number mat@nr on input line 141.

! LaTeX Error: Missing \begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.142 \newif\if@
              ACM@manuscript
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \ACM doesn't match its definition.
l.145 \ifnum\ACM@for
                  mat@nr=5\relax % siggraph
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
m
l.145 \ifnum\ACM@form
                   at@nr=5\relax % siggraph
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing = inserted for \ifnum.
<to be read again> 
m
l.145 \ifnum\ACM@form
                   at@nr=5\relax % siggraph
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
m
l.145 \ifnum\ACM@form
                   at@nr=5\relax % siggraph
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Use of \@ doesn't match its definition.
<write> 
Class \@c
          lassname Warning: The format siggraph is now obsolete. I am switching
l.147     I am switching to sigconf.}
                                   
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.


Class lassname Warning: The format siggraph is now obsolete. I am switching to s
igconf. on input line 147.


! Package xkeyval Error: `format' undefined in families `acmart.cls'.

See the xkeyval package documentation for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.148   \setkeys{acmart.cls}{format=sigconf}
                                          
Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Use of \ACM doesn't match its definition.
l.150 \ifnum\ACM@for
                  mat@nr=0\relax
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
m
l.150 \ifnum\ACM@form
                   at@nr=0\relax
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Missing = inserted for \ifnum.
<to be read again> 
m
l.150 \ifnum\ACM@form
                   at@nr=0\relax
I was expecting to see `<', `=', or `>'. Didn't.

! Missing number, treated as zero.
<to be read again> 
m
l.150 \ifnum\ACM@form
                   at@nr=0\relax
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Use of \@ doesn't match its definition.
l.151   \@A
         CM@manuscripttrue
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@ doesn't match its definition.
l.155 \@A
       CM@sigchiamodefalse
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \ACM doesn't match its definition.
l.156 \ifcase\ACM@for
                   mat@nr
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
m
l.156 \ifcase\ACM@form
                    at@nr
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Use of \@ doesn't match its definition.
l.158   \@A
         CM@journaltrue
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Use of \@ doesn't match its definition.
<write> Class \@c
         lassname Info: Using fontsize \ACM @fontsize\on@line .
l.199 ...{\@classname}{Using fontsize \ACM@fontsize}
                                                  
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

Class lassname Info: Using fontsize  on input line 199.
("C:/Program Files/MiKTeX 2.9/tex/latex/amscls/amsart.cls"
Document Class: amsart 2017/10/31 v2.20.4
\linespacing=\dimen102
\normalparindent=\dimen103
\normaltopskip=\skip41

Overfull \hbox (20.0pt too wide) in paragraph at lines 142--349
[]@ACM@manuscript
 []

Runaway argument?
@nnil ifx external@font @empty @latex@error {Font expandafter string ETC.
! Paragraph ended before reserved@f was complete.
<to be read again> 
par 
l.525 \def\@setaddresses{\par
                           
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.

Runaway argument?
@nnil ifx external@font @empty @latex@error {Font expandafter string ETC.
! Paragraph ended before reserved@f was complete.
<to be read again> 
par 
l.532     \par
            \addvspace\bigskipamount\indent
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


! LaTeX Error: Missing begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.532     \par\addvspace\bigskipamount\indent
                                           
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! You can't use `macro parameter character #' in horizontal mode.
<argument> (ignorespaces ##
                ##1unskip ) 
l.533 ...ifnotempty{##1}{(\ignorespaces##1\unskip) }
                                                  %
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn''t ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! You can't use `macro parameter character #' in horizontal mode.
<argument> (ignorespaces ####
                  1unskip ) 
l.533 ...ifnotempty{##1}{(\ignorespaces##1\unskip) }
                                                  %
Sorry, but I'm not programmed to handle this case;
I'll just pretend that you didn''t ask for it.
If you're in the wrong mode, you might be able to
return to the right one by typing `I}' or `I$' or `I\par'.

! Argument of reserved@f has an extra }.
<inserted text> 
par 
l.534     {\scshape\ignorespaces##2}
                                  \par\endgroup}%
I've run across a `}' that doesn't seem to match anything.
For example, `\def\a#1{...}' and `\a}' would produce
this error. If you simply proceed now, the `\par' that
I've just inserted will cause me to report a runaway
argument that might be the root of the problem. But if
your `}' was spurious, just type `2' and it will go away.

Runaway argument?
@nnil ifx external@font @empty @latex@error {Font expandafter string ETC.
! Paragraph ended before reserved@f was complete.
<to be read again> 
par 
l.534     {\scshape\ignorespaces##2}
                                  \par\endgroup}%
I suspect you've forgotten a `}', causing me to apply this
control sequence to too much text. How can we recover?
My plan is to forget the whole thing and hope for the best.


Overfull \hbox (12.0pt too wide) in paragraph at lines 532--534
[](1) 
 []

! Extra }, or forgotten endgroup.
<recently read> }
 
l.534     {\scshape\ignorespaces##2}
                                  \par\endgroup}%
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Parameters must be numbered consecutively.
<to be read again> 
##
l.535   \def\curraddr##
                     1##2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
1
l.535   \def\curraddr##1
                      ##2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
##
l.535   \def\curraddr##1##
                        2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
2
l.535   \def\curraddr##1##2
                         {\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
##
l.539   \def\email##
                  1##2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
1
l.539   \def\email##1
                   ##2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
##
l.539   \def\email##1##
                     2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
2
l.539   \def\email##1##2
                      {\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
##
l.543   \def\urladdr##
                    1##2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
1
l.543   \def\urladdr##1
                     ##2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
##
l.543   \def\urladdr##1##
                       2{\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Parameters must be numbered consecutively.
<to be read again> 
2
l.543   \def\urladdr##1##2
                        {\begingroup
I've inserted the digit you should have used after the #.
Type `1' to delete what you did use.

! Undefined control sequence.
l.548   \addresses
                
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Extra }, or forgotten endgroup.
l.550 }
     
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.


! LaTeX Error: Command \xandlist already defined.
               Or name \end... illegal, see p.192 of the manual.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.596   \let\@andlistc\@iden}
                           
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

copyins=insert199
abstractbox=box26
listisep=skip42
c@part=count82
c@section=count83
c@subsection=count84
c@subsubsection=count85
c@paragraph=count86
c@subparagraph=count87
c@figure=count88
c@table=count89
abovecaptionskip=skip43
belowcaptionskip=skip44
captionindent=dimen104
thm@style=toks16
thm@bodyfont=toks17
thm@headfont=toks18
thm@notefont=toks19
thm@headpunct=toks20
thm@preskip=skip45
thm@postskip=skip46

! LaTeX Error: Command \upn already defined.
               Or name \end... illegal, see p.192 of the manual.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.1536 \providecommand\@upn{\textup}
                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

thm@headsep=skip47
dth@everypar=toks21

Class amsart Warning: dh unavailable without amsfonts; replaced by 'dh' on input
 line 1841.

)

! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.202 \RequirePackage
                   {etoolbox}
The package `' is defective.
It attempts to load `microtype' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.203 \RequirePackage
                   {refcount}
The package `' is defective.
It attempts to load `etoolbox' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.204 \RequirePackage
                   {totpages}
The package `' is defective.
It attempts to load `refcount' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.205 \RequirePackage
                   {environ}
The package `' is defective.
It attempts to load `totpages' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.206 \if
       @ACM@manuscript
The package `' is defective.
It attempts to load `environ' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.211 \if
       @ACM@natbib
The package `' is defective.
It attempts to load `textcase' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: Missing begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.296     notesep={, }}}
                      
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Missing number, treated as zero.
<to be read again> 
a
l.296     notesep={, }}}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! You already have nine parameters.
reserved@a ... expandafter bibstyle reserved@b #10
                                                  a{
l.296     notesep={, }}}
                      
I'm going to ignore the # sign you just used.

! Undefined control sequence.
<argument> setcitestyle 
             {authoryear,open={[},close={]},citesep={;},aysep={},yysep={,},note
l.296     notesep={, }}}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
a
l.301     notesep={, }}}
                      
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! You already have nine parameters.
reserved@a ... expandafter bibstyle reserved@b #10
                                                  a{
l.301     notesep={, }}}
                      
I'm going to ignore the # sign you just used.

! Undefined control sequence.
<argument> setcitestyle 
             {numbers,sort&compress,open={[},close={]},citesep={,},notesep={, }
l.301     notesep={, }}}
                      
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Misplaced alignment tab character &.
<argument> setcitestyle {numbers,sort&
                           compress,open={[},close={]},citesep={,},notesep={, }
l.301     notesep={, }}}
                      
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.416 \pdfstringdefDisableCommands
                                {%
The package `' is defective.
It attempts to load `hyperref' in the options section, i.e.,
between DeclareOption and ProcessOptions.

! Undefined control sequence.
<recently read> pdfstringdefDisableCommands 
                            
l.416 \pdfstringdefDisableCommands
                                {%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.422 \urlstyle
             {rm}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Use of ACM doesn't match its definition.
l.423 \ifcase\ACM@for
                   mat@nr
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
m
l.423 \ifcase\ACM@form
                    at@nr
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
l.436 \AtEndPreamble
                  {%
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.444     \hypersetup
                   {hidelinks}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.472 \RequirePackage
                   [prologue]{xcolor}
The package `' is defective.
It attempts to load `graphicx' in the options section, i.e.,
between DeclareOption and ProcessOptions.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.473 \definecolor
                [named]{ACMBlue}{cmyk}{1,0.1,0,0.1}
The package `' is defective.
It attempts to load `xcolor' in the options section, i.e.,
between DeclareOption and ProcessOptions.

! Undefined control sequence.
<recently read> definecolor 
            
l.473 \definecolor
                [named]{ACMBlue}{cmyk}{1,0.1,0,0.1}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.474 \definecolor
                [named]{ACMYellow}{cmyk}{0,0.16,1,0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.475 \definecolor
                [named]{ACMOrange}{cmyk}{0,0.42,1,0.01}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.476 \definecolor
                [named]{ACMRed}{cmyk}{0,0.90,0.86,0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.477 \definecolor
                [named]{ACMLightBlue}{cmyk}{0.49,0.01,0,0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.478 \definecolor
                [named]{ACMGreen}{cmyk}{0.20,0,1,0.19}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.479 \definecolor
                [named]{ACMPurple}{cmyk}{0.55,1,0,0.15}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.480 \definecolor
                [named]{ACMDarkBlue}{cmyk}{1,0.58,0,0.21}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.490 \ifcase
           \ACM@format@nr
The package `' is defective.
It attempts to load `geometry' in the options section, i.e.,
between DeclareOption and ProcessOptions.

! Use of ACM doesn't match its definition.
l.490 \ifcase\ACM@for
                   mat@nr
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
m
l.490 \ifcase\ACM@form
                    at@nr
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Undefined control sequence.
l.492    \geometry
                {letterpaper,head=13pt,
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
<argument> 10p 
    @
l.553 \setlength\parindent{10\p@}
                               
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Illegal unit of measure (pt inserted).
<to be read again> 
@
l.553 \setlength\parindent{10\p@}
                               
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Undefined control sequence.
<argument> z 
  @
l.554 \setlength\parskip{\z@}
                           
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing number, treated as zero.
<to be read again> 
@
l.554 \setlength\parskip{\z@}
                           
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)

! Illegal unit of measure (pt inserted).
<to be read again> 
@
l.554 \setlength\parskip{\z@}
                           
Dimensions can be in units of em, ex, in, pt, pc,
cm, mm, dd, cc, nd, nc, bp, or sp; but yours is a new one!
I'll assume that you meant to say pt, for printer's points.
To recover gracefully from this error, it's best to
delete the erroneous units; e.g., type `2' to delete
two letters. (See Chapter 27 of The TeXbook.)

! Use of ACM doesn't match its definition.
l.555 \ifcase\ACM@for
                   mat@nr
If you say, e.g., `\def\a1{...}', then you must always
put `1' after `\a', since control sequence names are
made up of letters only. The macro here has not been
followed by the required stuff, so I'm ignoring it.

! Missing number, treated as zero.
<to be read again> 
m
l.555 \ifcase\ACM@form
                    at@nr
A number should have been here; I inserted `0'.
(If you can't figure out why I needed to see a number,
look up `weird error' in the index to The TeXbook.)


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.571 \SelectFootnoteRule
                       [2]{copyrightpermission}
The package `' is defective.
It attempts to load `manyfoot' in the options section, i.e.,
between DeclareOption and ProcessOptions.

! Undefined control sequence.
<recently read> SelectFootnoteRule 
                   
l.571 \SelectFootnoteRule
                       [2]{copyrightpermission}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.572 \DeclareNewFootnote
                       {authorsaddresses}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.573 \SelectFootnoteRule
                       [2]{copyrightpermission}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.574 \DeclareNewFootnote
                       {copyrightpermission}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: RequirePackage or LoadClass in Options Section.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.618 \ifPDFTeX
             
The package `' is defective.
It attempts to load `iftex' in the options section, i.e.,
between DeclareOption and ProcessOptions.

! Undefined control sequence.
<recently read> ifPDFTeX 
         
l.618 \ifPDFTeX
             
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

("C:/Program Files/MiKTeX 2.9/tex/generic/pdftex/glyphtounicode.tex"
Overfull \hbox (12.0pt too wide) in paragraph at lines 296--18
[]@acmauthoryearauthoryear,open=[,close=],citesep=;,aysep=,yysep=,,notesep=,
 []

! Undefined control sequence.
l.20 \pdfglyphtounicode
                     {A}{0041}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: Missing begin{document}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.20 \pdfglyphtounicode{A
                       }{0041}
You're in trouble here.  Try typing  <return>  to proceed.
If that doesn't work, type  X <return>  to quit.

! Undefined control sequence.
l.21 \pdfglyphtounicode
                     {AE}{00C6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.22 \pdfglyphtounicode
                     {AEacute}{01FC}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.23 \pdfglyphtounicode
                     {AEmacron}{01E2}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.24 \pdfglyphtounicode
                     {AEsmall}{F7E6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.25 \pdfglyphtounicode
                     {Aacute}{00C1}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.26 \pdfglyphtounicode
                     {Aacutesmall}{F7E1}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.27 \pdfglyphtounicode
                     {Abreve}{0102}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.28 \pdfglyphtounicode
                     {Abreveacute}{1EAE}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.29 \pdfglyphtounicode
                     {Abrevecyrillic}{04D0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.30 \pdfglyphtounicode
                     {Abrevedotbelow}{1EB6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.31 \pdfglyphtounicode
                     {Abrevegrave}{1EB0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.32 \pdfglyphtounicode
                     {Abrevehookabove}{1EB2}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.33 \pdfglyphtounicode
                     {Abrevetilde}{1EB4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.34 \pdfglyphtounicode
                     {Acaron}{01CD}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.35 \pdfglyphtounicode
                     {Acircle}{24B6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.36 \pdfglyphtounicode
                     {Acircumflex}{00C2}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.37 \pdfglyphtounicode
                     {Acircumflexacute}{1EA4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.38 \pdfglyphtounicode
                     {Acircumflexdotbelow}{1EAC}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.39 \pdfglyphtounicode
                     {Acircumflexgrave}{1EA6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.40 \pdfglyphtounicode
                     {Acircumflexhookabove}{1EA8}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.41 \pdfglyphtounicode
                     {Acircumflexsmall}{F7E2}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.42 \pdfglyphtounicode
                     {Acircumflextilde}{1EAA}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.43 \pdfglyphtounicode
                     {Acute}{F6C9}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.44 \pdfglyphtounicode
                     {Acutesmall}{F7B4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.45 \pdfglyphtounicode
                     {Acyrillic}{0410}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.46 \pdfglyphtounicode
                     {Adblgrave}{0200}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.47 \pdfglyphtounicode
                     {Adieresis}{00C4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.48 \pdfglyphtounicode
                     {Adieresiscyrillic}{04D2}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.49 \pdfglyphtounicode
                     {Adieresismacron}{01DE}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.50 \pdfglyphtounicode
                     {Adieresissmall}{F7E4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.51 \pdfglyphtounicode
                     {Adotbelow}{1EA0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.52 \pdfglyphtounicode
                     {Adotmacron}{01E0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.53 \pdfglyphtounicode
                     {Agrave}{00C0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.54 \pdfglyphtounicode
                     {Agravesmall}{F7E0}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.55 \pdfglyphtounicode
                     {Ahookabove}{1EA2}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.56 \pdfglyphtounicode
                     {Aiecyrillic}{04D4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.57 \pdfglyphtounicode
                     {Ainvertedbreve}{0202}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.58 \pdfglyphtounicode
                     {Alpha}{0391}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.59 \pdfglyphtounicode
                     {Alphatonos}{0386}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.60 \pdfglyphtounicode
                     {Amacron}{0100}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.61 \pdfglyphtounicode
                     {Amonospace}{FF21}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.62 \pdfglyphtounicode
                     {Aogonek}{0104}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.63 \pdfglyphtounicode
                     {Aring}{00C5}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.64 \pdfglyphtounicode
                     {Aringacute}{01FA}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.65 \pdfglyphtounicode
                     {Aringbelow}{1E00}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.66 \pdfglyphtounicode
                     {Aringsmall}{F7E5}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.67 \pdfglyphtounicode
                     {Asmall}{F761}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.68 \pdfglyphtounicode
                     {Atilde}{00C3}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.69 \pdfglyphtounicode
                     {Atildesmall}{F7E3}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.70 \pdfglyphtounicode
                     {Aybarmenian}{0531}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.71 \pdfglyphtounicode
                     {B}{0042}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.72 \pdfglyphtounicode
                     {Bcircle}{24B7}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.73 \pdfglyphtounicode
                     {Bdotaccent}{1E02}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.74 \pdfglyphtounicode
                     {Bdotbelow}{1E04}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.75 \pdfglyphtounicode
                     {Becyrillic}{0411}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.76 \pdfglyphtounicode
                     {Benarmenian}{0532}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.77 \pdfglyphtounicode
                     {Beta}{0392}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.78 \pdfglyphtounicode
                     {Bhook}{0181}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.79 \pdfglyphtounicode
                     {Blinebelow}{1E06}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.80 \pdfglyphtounicode
                     {Bmonospace}{FF22}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.81 \pdfglyphtounicode
                     {Brevesmall}{F6F4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.82 \pdfglyphtounicode
                     {Bsmall}{F762}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.83 \pdfglyphtounicode
                     {Btopbar}{0182}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.84 \pdfglyphtounicode
                     {C}{0043}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.85 \pdfglyphtounicode
                     {Caarmenian}{053E}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.86 \pdfglyphtounicode
                     {Cacute}{0106}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.87 \pdfglyphtounicode
                     {Caron}{F6CA}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.88 \pdfglyphtounicode
                     {Caronsmall}{F6F5}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.89 \pdfglyphtounicode
                     {Ccaron}{010C}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.90 \pdfglyphtounicode
                     {Ccedilla}{00C7}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.91 \pdfglyphtounicode
                     {Ccedillaacute}{1E08}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.92 \pdfglyphtounicode
                     {Ccedillasmall}{F7E7}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.93 \pdfglyphtounicode
                     {Ccircle}{24B8}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.94 \pdfglyphtounicode
                     {Ccircumflex}{0108}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.95 \pdfglyphtounicode
                     {Cdot}{010A}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.96 \pdfglyphtounicode
                     {Cdotaccent}{010A}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.97 \pdfglyphtounicode
                     {Cedillasmall}{F7B8}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.98 \pdfglyphtounicode
                     {Chaarmenian}{0549}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.99 \pdfglyphtounicode
                     {Cheabkhasiancyrillic}{04BC}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.100 \pdfglyphtounicode
                      {Checyrillic}{0427}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.101 \pdfglyphtounicode
                      {Chedescenderabkhasiancyrillic}{04BE}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.102 \pdfglyphtounicode
                      {Chedescendercyrillic}{04B6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.103 \pdfglyphtounicode
                      {Chedieresiscyrillic}{04F4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.104 \pdfglyphtounicode
                      {Cheharmenian}{0543}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.105 \pdfglyphtounicode
                      {Chekhakassiancyrillic}{04CB}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.106 \pdfglyphtounicode
                      {Cheverticalstrokecyrillic}{04B8}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.107 \pdfglyphtounicode
                      {Chi}{03A7}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.108 \pdfglyphtounicode
                      {Chook}{0187}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.109 \pdfglyphtounicode
                      {Circumflexsmall}{F6F6}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.110 \pdfglyphtounicode
                      {Cmonospace}{FF23}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.111 \pdfglyphtounicode
                      {Coarmenian}{0551}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.112 \pdfglyphtounicode
                      {Csmall}{F763}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.113 \pdfglyphtounicode
                      {D}{0044}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.114 \pdfglyphtounicode
                      {DZ}{01F1}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.115 \pdfglyphtounicode
                      {DZcaron}{01C4}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.116 \pdfglyphtounicode
                      {Daarmenian}{0534}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.117 \pdfglyphtounicode
                      {Dafrican}{0189}
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Undefined control sequence.
l.118 \pdfglyphtounicode
                      {Dcaron}{010E}
(That makes 100 errors; please try again.)

Here is how much of LuaTeX's memory you used:
 1130 strings out of 494447
 100000,89155 words of node,token memory allocated
 22121 words of node memory still in use:
   28 hlist, 1 disc, 13 local_par, 1 dir, 298 glue, 16 penalty, 2577 glyph, 302 
attribute, 60 glue_spec, 302 attribute_list, 1 temp, 13 if_stack nodes
   avail lists: 3:1,4:24,5:1,10:23
 5341 multiletter control sequences out of 65536+200000
 14 fonts using 591559 bytes
 24i,0n,26p,314b,664s stack positions out of 5000i,500n,10000p,200000b,50000s
!  ==> Fatal error occurred, no output PDF file produced!
